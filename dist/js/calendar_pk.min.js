!function(){"use strict";angular.module("directives",[]),angular.module("constants",[]),angular.module("filters",[]);angular.module("calendar_pk",["directives","constants","templates","filters"])}(),function(){"use strict";angular.module("constants").constant("calendarConfig",{formatDay:"dd",formatDayHeader:"EEE",formatMonthTitle:"MMMM yyyy",eventSource:[],startingDayMonth:1})}(),function(){"use strict";function calendar_pk(){function CalendarController($scope,$attrs,$interpolate,calendarConfig,$timeout,$filter){function init(){angular.forEach(["formatDay","formatDayHeader","formatMonthTitle","startingDayMonth"],function(key,index){vm[key]=angular.isDefined($attrs[key])?$interpolate($attrs[key])($scope.$parent):calendarConfig[key]}),vm.currentViewIndex=0,vm.currentDate=new Date,refreshView()}function onDataLoaded(){for(var eventSource=$scope.eventSource,timeZoneOffset=-(new Date).getTimezoneOffset(),utcStartTime=new Date(vm.range.startTime.getTime()+60*timeZoneOffset*1e3),utcEndTime=new Date(vm.range.endTime.getTime()+60*timeZoneOffset*1e3),dates=vm.views[vm.currentViewIndex].dates,r=0;42>r;r+=1)dates[r].event=!1;for(var i=0;i<eventSource.length;i+=1){var eventDate=new Date(eventSource[i]);eventDate>=utcStartTime&&utcEndTime>eventDate&&(dates[Math.floor((eventDate-utcStartTime)/864e5)].event=!0)}}function getEventIndex(time){for(var j=-1,eventSource=$scope.eventSource,i=0;i<eventSource.length;i++)if(eventSource[i].getDate()===time.getDate()&&eventSource[i].getMonth()===time.getMonth()&&eventSource[i].getFullYear()===time.getFullYear()){j=i;break}return j}function toogle(selectedTime){var eventSource=$scope.eventSource,index=getEventIndex(selectedTime);index>-1?eventSource.splice(index,1):eventSource.push(selectedTime)}function isAllWeekSelected(date_index){for(var dates=vm.views[vm.currentViewIndex].dates,all_selected=!0,i=0;7>i;i++)if(-1===getEventIndex(dates[date_index+i].date)){all_selected=!1;break}return all_selected}function getAdjacentCalendarDate(currentCalendarDate,direction){var firstDayInNextMonth,calculateCalendarDate=new Date(currentCalendarDate),year=calculateCalendarDate.getFullYear(),month=calculateCalendarDate.getMonth()+direction,date=calculateCalendarDate.getDate();return calculateCalendarDate.setFullYear(year,month,date),firstDayInNextMonth=new Date(year,month+1,1),firstDayInNextMonth.getTime()<=calculateCalendarDate.getTime()&&(calculateCalendarDate=new Date(firstDayInNextMonth-864e5)),calculateCalendarDate}function refreshView(direction){function getRange(date){var endDate,firstDayOfMonth=new Date(date.getFullYear(),date.getMonth(),1),difference=vm.startingDayMonth-firstDayOfMonth.getDay(),numDisplayedFromPreviousMonth=difference>0?7-difference:-difference,startDate=new Date(firstDayOfMonth);return numDisplayedFromPreviousMonth>0&&startDate.setDate(-numDisplayedFromPreviousMonth+1),endDate=new Date(startDate),endDate.setDate(endDate.getDate()+42),{startTime:startDate,endTime:endDate}}function refreshMonth(){var currentViewStartDate=new Date(vm.range.startTime);currentViewStartDate.setDate(currentViewStartDate.getDate()+10),$scope.monthChanged&&$scope.monthChanged({startTime:vm.range.startTime,endTime:vm.range.endTime,display:$filter("date")(currentViewStartDate,vm.formatMonthTitle)})}function populateAdjacentViews(){function getDates(startDate){var dates=new Array(42),current=new Date(startDate);current.setHours(12);for(var i=0;i<dates.length;i++)dates[i]={date:new Date(current),event:!1},current.setDate(current.getDate()+1);return{dates:dates}}function getAdjacentViewStartTime(direction){var adjacentCalendarDate=getAdjacentCalendarDate(vm.currentDate,direction);return getRange(adjacentCalendarDate).startTime}var currentViewStartDate,currentViewData,toUpdateViewIndex,currentViewIndex=vm.currentViewIndex;1===direction?(currentViewStartDate=getAdjacentViewStartTime(direction),toUpdateViewIndex=(currentViewIndex+1)%3,angular.copy(getDates(currentViewStartDate),vm.views[toUpdateViewIndex])):-1===direction?(currentViewStartDate=getAdjacentViewStartTime(direction),toUpdateViewIndex=(currentViewIndex+2)%3,angular.copy(getDates(currentViewStartDate),vm.views[toUpdateViewIndex])):vm.views?(currentViewStartDate=vm.range.startTime,angular.copy(getDates(currentViewStartDate),vm.views[currentViewIndex]),currentViewStartDate=getAdjacentViewStartTime(-1),toUpdateViewIndex=(currentViewIndex+2)%3,angular.copy(getDates(currentViewStartDate),vm.views[toUpdateViewIndex]),currentViewStartDate=getAdjacentViewStartTime(1),toUpdateViewIndex=(currentViewIndex+1)%3,angular.copy(getDates(currentViewStartDate),vm.views[toUpdateViewIndex])):(currentViewData=[],currentViewStartDate=vm.range.startTime,currentViewData.push(getDates(currentViewStartDate)),currentViewStartDate=getAdjacentViewStartTime(1),currentViewData.push(getDates(currentViewStartDate)),currentViewStartDate=getAdjacentViewStartTime(-1),currentViewData.push(getDates(currentViewStartDate)),vm.views=currentViewData)}vm.range=getRange(vm.currentDate),refreshMonth(),populateAdjacentViews(),$scope.eventSource&&onDataLoaded()}var vm=this;$scope.$watch(function(){return $scope.eventSource},function(newVal,oldVal){onDataLoaded()},!0),init(),vm.dayClick=function(selectedTime){toogle(selectedTime),$scope.timeSelected&&$scope.timeSelected({selectedTime:selectedTime})},vm.weekClick=function(date_index){for(var all_selected=isAllWeekSelected(date_index),dates=vm.views[vm.currentViewIndex].dates,i=0;7>i;i++)all_selected?toogle(dates[date_index+i].date):all_selected||dates[date_index+i].event||toogle(dates[date_index+i].date);if($scope.weekSelected){var monday=dates[date_index].date;$scope.weekSelected({monday:monday})}},vm.slideChanged=function($index){$timeout(function(){var currentViewIndex=vm.currentViewIndex,direction=0;currentViewIndex===$index-1||0===$index&&2===currentViewIndex?direction=1:(currentViewIndex===$index+1||2===$index&&0===currentViewIndex)&&(direction=-1),vm.currentViewIndex=$index,vm.currentDate=getAdjacentCalendarDate(vm.currentDate,direction),refreshView(direction)},100)}}var directive={};return directive.restrict="E",directive.replace=!0,directive.templateUrl="calendar_pk.html",directive.scope={monthChanged:"&",timeSelected:"&",weekSelected:"&",eventSource:"="},directive.controllerAs="cc",directive.controller=CalendarController,CalendarController.$inject=["$scope","$attrs","$interpolate","calendarConfig","$timeout","$filter"],directive}angular.module("directives").directive("calendar_pk",calendar_pk),calendar_pk.$inject=[]}(),function(){function sameMonth(){return function(date,currentDate){return date=new Date(+date),current=new Date(+currentDate),date.getMonth()===current.getMonth()}}angular.module("filters").filter("sameMonth",sameMonth),sameMonth.$inject=[]}(),function(){function todayFilter(){return function(date){date=new Date(+date);var today=new Date;return date.getDate()===today.getDate()&&date.getMonth()===today.getMonth()&&date.getFullYear()===today.getFullYear()}}angular.module("filters").filter("todayFilter",todayFilter),todayFilter.$inject=[]}(),function(){"use strict";angular.module("templates",[]).run(["$templateCache",function($templateCache){$templateCache.put("calendar_pk.html",'<div style="height: 100%;">\n    <ion-slide-box  on-slide-changed="cc.slideChanged($index)"\n                    does-continue="true"\n                    show-pager="false"\n                    delegate-handle="monthview-slide"\n                    style="height: auto;">\n        <ion-slide ng-repeat="view in cc.views track by $index">\n            <table ng-if="$index === cc.currentViewIndex" class="table-bordered monthview-datetable">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th ng-repeat="day in view.dates.slice(0,7) track by day.date">\n                            <small>{{::day.date | date: cc.formatDayHeader | uppercase}}</small>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr ng-repeat="i in [0,1,2,3,4,5]">\n                        <td ng-click="cc.weekClick(7*i)">SEM<br>{{view.dates[7*i].date | date : \'w\'}}</td>\n                        <td ng-repeat="j in [0,1,2,3,4,5,6]"\n                            ng-init="date = view.dates[7*i+j]"\n                            ng-click="cc.dayClick(date.date)"\n                            ng-class="{\'monthview-secondary\': date.event && !(date.date | sameMonth : cc.currentDate), \'monthview-primary\': date.event && (date.date | sameMonth : cc.currentDate), \'monthview-current\': (date.date | todayFilter), \'text-muted\': !(date.date | sameMonth : cc.currentDate)}">{{date.date | date : cc.formatDay}}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <table ng-if="$index !== cc.currentViewIndex" class="table-bordered monthview-datetable">\n                <thead>\n                    <tr class="text-center">\n                        <th></th>\n                        <th ng-repeat="day in view.dates.slice(0,7) track by day.date">\n                            <small>{{::day.date | date: cc.formatDayHeader | uppercase}}</small>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr ng-repeat="i in [0,1,2,3,4,5]">\n                        <td>SEM<br>{{view.dates[7*i].date | date : \'w\'}}</td>\n                        <td ng-repeat="j in [0,1,2,3,4,5,6]">{{view.dates[7*i+j].date | date : cc.formatDay}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </ion-slide>\n    </ion-slide-box>\n</div>\n')}])}();